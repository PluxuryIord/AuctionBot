# kb.py
from typing import Optional

from aiogram.types import (
    InlineKeyboardMarkup, InlineKeyboardButton,
    ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
)
from aiogram.utils.keyboard import InlineKeyboardBuilder  # –ò—Å–ø–æ–ª—å–∑—É–µ–º Builder


def get_main_menu():
    # –ó–∞–¥–∞–µ–º username –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø—Ä—è–º–æ –∑–¥–µ—Å—å
    # TODO: –í—ã–Ω–µ—Å—Ç–∏ admin_username –≤ .env —Ñ–∞–π–ª –¥–ª—è –ª—É—á—à–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    admin_username = "@AvroraDiamonds"

    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üíé –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∞—É–∫—Ü–∏–æ–Ω", callback_data="menu_current"))
    builder.row(InlineKeyboardButton(text="üìö –í—Å–µ –∞—É–∫—Ü–∏–æ–Ω—ã", callback_data="menu_all")) # –û—Ç–¥–µ–ª—å–Ω—ã–π —Ä—è–¥
    # –ö–Ω–æ–ø–∫–∞ –∫–∞–∫ —Å—Å—ã–ª–∫–∞
    builder.row(InlineKeyboardButton(text="üìû –°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º", url=f"https://t.me/{admin_username}")) # –û—Ç–¥–µ–ª—å–Ω—ã–π —Ä—è–¥ –∏ URL

    return builder.as_markup()


def get_auction_keyboard(
        auction_id: int,
        blitz_price: Optional[float],
        participation_status: Optional[str],
        is_admin: bool = False
):
    builder = InlineKeyboardBuilder()

    # --- –î–ò–ù–ê–ú–ò–ß–ï–°–ö–ê–Ø –ö–ù–û–ü–ö–ê –°–¢–ê–í–ö–ò/–ó–ê–Ø–í–ö–ò ---
    if participation_status == 'approved':
        builder.row(InlineKeyboardButton(text="–°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É", callback_data=f"bid_auction_{auction_id}"))
    elif participation_status == 'pending':
        builder.row(InlineKeyboardButton(text="‚è≥ –ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏", callback_data="noop"))
    elif participation_status == 'rejected':
        builder.row(InlineKeyboardButton(text="‚ùå –£—á–∞—Å—Ç–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ", callback_data="noop"))
    else:  # status is None
        builder.row(
            InlineKeyboardButton(text="‚úÖ –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—á–∞—Å—Ç–∏–µ", callback_data=f"apply_auction_{auction_id}"))
    # ---

    if blitz_price and blitz_price > 0:
        builder.row(InlineKeyboardButton(text=f"‚ö°Ô∏è –ë–ª–∏—Ü-—Ü–µ–Ω–∞: {blitz_price:,.0f} ‚ÇΩ",
                                         callback_data=f"blitz_auction_{auction_id}"))

    builder.row(InlineKeyboardButton(text="üìú –í—Å–µ —Å—Ç–∞–≤–∫–∏", callback_data=f"show_bids_{auction_id}_1"))

    if is_admin:
        builder.row(
            InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥. –ù–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"edit_auction_title_{auction_id}"),
            InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥. –û–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"edit_auction_desc_{auction_id}")
        )

    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu"))
    return builder.as_markup()


def confirm_blitz_keyboard(auction_id: int) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±–ª–∏—Ü-–ø–æ–∫—É–ø–∫–∏.
    """
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚úÖ –î–∞, –∫—É–ø–∏—Ç—å", callback_data=f"confirm_blitz_{auction_id}"))
    # –≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã –≤–µ—Ä–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É –∞—É–∫—Ü–∏–æ–Ω–∞
    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"show_auction_{auction_id}"))
    return builder.as_markup()


def admin_approval_keyboard(user_id):
    buttons = [
        [
            InlineKeyboardButton(text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"approve_user_{user_id}"),
            InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"decline_user_{user_id}")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def admin_participation_keyboard(user_id: int, auction_id: int) -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∏ –æ–¥–æ–±—Ä–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞ –£–ß–ê–°–¢–ò–ï –í –õ–û–¢–ï."""
    buttons = [
        [
            InlineKeyboardButton(text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å —É—á–∞—Å—Ç–∏–µ", callback_data=f"approve_part_{user_id}_{auction_id}"),
            InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å —É—á–∞—Å—Ç–∏–µ", callback_data=f"decline_part_{user_id}_{auction_id}")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def back_to_menu_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")]]
    )


# --- –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø ---
def cancel_fsm_keyboard(cancel_callback_data: str = "back_to_menu"):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è FSM —Å –∫–Ω–æ–ø–∫–æ–π "–û—Ç–º–µ–Ω–∞".
    """
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=cancel_callback_data)]
        ]
    )


def get_main_menu_admin():
    # –ó–∞–¥–∞–µ–º username –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø—Ä—è–º–æ –∑–¥–µ—Å—å
    # TODO: –í—ã–Ω–µ—Å—Ç–∏ admin_username –≤ .env —Ñ–∞–π–ª
    admin_username = "@AvroraDiamonds"

    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üíé –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∞—É–∫—Ü–∏–æ–Ω", callback_data="menu_current"))
    builder.row(InlineKeyboardButton(text="üìö –í—Å–µ –∞—É–∫—Ü–∏–æ–Ω—ã", callback_data="menu_all")) # –û—Ç–¥–µ–ª—å–Ω—ã–π —Ä—è–¥
    # –ö–Ω–æ–ø–∫–∞ –∫–∞–∫ —Å—Å—ã–ª–∫–∞
    builder.row(InlineKeyboardButton(text="üìû –°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º", url=f"https://t.me/{admin_username}")) # –û—Ç–¥–µ–ª—å–Ω—ã–π —Ä—è–¥ –∏ URL
    builder.row(InlineKeyboardButton(text="‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin_menu")) # –û—Ç–¥–µ–ª—å–Ω—ã–π —Ä—è–¥

    return builder.as_markup()


async def admin_menu_keyboard() -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∞–¥–º–∏–Ω-–º–µ–Ω—é, –≤–∫–ª—é—á–∞—è —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–ø—Ä–∏–Ω—è—Ç–∏—è."""
    from db import get_auto_approve_status # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞

    auto_approve_enabled = await get_auto_approve_status()
    auto_approve_text = "‚úÖ –ê–≤—Ç–æ–ø—Ä–∏–Ω—è—Ç–∏–µ –í–ö–õ" if auto_approve_enabled else "‚ùå –ê–≤—Ç–æ–ø—Ä–∏–Ω—è—Ç–∏–µ –í–´–ö–õ"

    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üÜï –°–æ–∑–¥–∞—Ç—å –∞—É–∫—Ü–∏–æ–Ω", callback_data="admin_create"))
    builder.row(InlineKeyboardButton(text="üõë –ó–∞–≤–µ—Ä—à–∏—Ç—å –∞—É–∫—Ü–∏–æ–Ω", callback_data="admin_finish"))
    builder.row(
        InlineKeyboardButton(text="‚õîÔ∏è –ó–∞–±–∞–Ω–∏—Ç—å", callback_data="admin_ban"),
        InlineKeyboardButton(text="‚úÖ –†–∞–∑–±–∞–Ω–∏—Ç—å", callback_data="admin_unban")
    )
    # –ö–Ω–æ–ø–∫–∞ –∞–≤—Ç–æ–ø—Ä–∏–Ω—è—Ç–∏—è
    builder.row(InlineKeyboardButton(text=auto_approve_text, callback_data="admin_toggle_auto_approve"))
    # –ö–Ω–æ–ø–∫–∏ –º–∞—Å—Å–æ–≤–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    builder.row(
        InlineKeyboardButton(text="üëç –û–¥–æ–±—Ä–∏—Ç—å –í–°–ï –∑–∞—è–≤–∫–∏ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", callback_data="admin_bulk_approve"),
        InlineKeyboardButton(text="üëé –û—Ç–∫–ª–æ–Ω–∏—Ç—å –í–°–ï –∑–∞—è–≤–∫–∏ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", callback_data="admin_bulk_decline")
    )
    builder.row(InlineKeyboardButton(text="üì§ –≠–∫—Å–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", callback_data="admin_export_users"))
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu"))

    return builder.as_markup()


def admin_select_winner_keyboard(top_bids: list[dict]) -> InlineKeyboardMarkup:
    # (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    rows = []
    if top_bids:
        for i, b in enumerate(top_bids, start=1):
            user_disp = f"@{b.get('username')}" if b.get('username') else (b.get('full_name') or str(b.get('user_id')))
            text = f"{i}) {b.get('bid_amount', 0):,.0f} ‚ÇΩ ‚Äî {user_disp}".replace(',', ' ')
            rows.append([InlineKeyboardButton(text=text, callback_data=f"admin_winner_bid_{b['bid_id']}")])
    else:
        rows.append([InlineKeyboardButton(text="–°—Ç–∞–≤–æ–∫ –Ω–µ—Ç", callback_data="noop")])
    rows.append([InlineKeyboardButton(text="–ë–µ–∑ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è", callback_data="admin_winner_none")])
    rows.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_menu")])
    return InlineKeyboardMarkup(inline_keyboard=rows)


# --- –ù–û–í–´–ï –ö–õ–ê–í–ò–ê–¢–£–†–´ ---

def admin_confirm_auction_keyboard() -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∏ "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å / –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å / –û—Ç–º–µ–Ω–∞"."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data="auction_post")],
        [InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="auction_edit")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_menu")]
    ])


def admin_edit_auction_fields_keyboard() -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä –ø–æ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="–ù–∞–∑–≤–∞–Ω–∏–µ", callback_data="edit_field_title"),
        InlineKeyboardButton(text="–û–ø–∏—Å–∞–Ω–∏–µ", callback_data="edit_field_desc")
    )
    builder.row(
        InlineKeyboardButton(text="–§–æ—Ç–æ", callback_data="edit_field_photo"),
        InlineKeyboardButton(text="–°—Ç–∞—Ä—Ç. —Ü–µ–Ω–∞", callback_data="edit_field_price")
    )
    builder.row(
        InlineKeyboardButton(text="–ú–∏–Ω. —à–∞–≥", callback_data="edit_field_step"),
        InlineKeyboardButton(text="–ë–ª–∏—Ü-—Ü–µ–Ω–∞", callback_data="edit_field_blitz")
    )
    builder.row(
        InlineKeyboardButton(text="–ö—É–ª–¥–∞—É–Ω", callback_data="edit_field_cooldown"),
        InlineKeyboardButton(text="–û—Ç–∫–ª. –ö—É–ª–¥–∞—É–Ω", callback_data="edit_field_cooldown_off")
    )
    builder.row(InlineKeyboardButton(text="–í—Ä–µ–º—è –æ–∫–æ–Ω—á.", callback_data="edit_field_time"))
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é", callback_data="edit_field_back"))
    return builder.as_markup()


# ---

def contact_request_keyboard():
    """–ö–Ω–æ–ø–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞."""
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–π –Ω–æ–º–µ—Ä", request_contact=True)]],
        resize_keyboard=True,
        one_time_keyboard=True  # –ö–Ω–æ–ø–∫–∞ –∏—Å—á–µ–∑–Ω–µ—Ç –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
    )


def remove_reply_keyboard():
    return ReplyKeyboardRemove()


def subscribe_keyboard(channel_url: str | None = None, auction_id: int = 0):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏."""
    builder = InlineKeyboardBuilder()
    # –ï—Å–ª–∏ URL –ø–µ—Ä–µ–¥–∞–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥–ø–∏—Å–∫–∏
    if channel_url:
        builder.row(InlineKeyboardButton(text="üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=channel_url))
    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
    check_cb = f"check_sub_{auction_id}" if auction_id else "check_sub"
    builder.row(InlineKeyboardButton(text="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data=check_cb))
    # –ö–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥ —Ç–æ–ª—å–∫–æ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∞—É–∫—Ü–∏–æ–Ω–∞
    if auction_id:
        builder.row(
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"show_auction_{auction_id}"))  # –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É
    return builder.as_markup()


def auctions_pagination_keyboard(page: int, total: int, page_size: int = 5) -> InlineKeyboardMarkup:
    # (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    total_pages = max(1, (total + page_size - 1) // page_size)
    buttons = []
    nav_row = []
    if page > 1:
        nav_row.append(InlineKeyboardButton(text="‚óÄÔ∏è", callback_data=f"all_page_{page - 1}"))
    nav_row.append(InlineKeyboardButton(text=f"{page}/{total_pages}", callback_data="noop"))
    if page < total_pages:
        nav_row.append(InlineKeyboardButton(text="‚ñ∂Ô∏è", callback_data=f"all_page_{page + 1}"))
    if nav_row:
        buttons.append(nav_row)
    buttons.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def admin_cancel_fsm_keyboard():
    """–ö–Ω–æ–ø–∫–∞ –û—Ç–º–µ–Ω–∞, –≤–µ–¥—É—â–∞—è –≤ –∞–¥–º–∏–Ω-–º–µ–Ω—é."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_menu")]
    ])


def bids_pagination_keyboard(auction_id: int, page: int, total_pages: int) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è —Å–ø–∏—Å–∫–∞ —Å—Ç–∞–≤–æ–∫.
    """
    builder = InlineKeyboardBuilder()
    nav_row = []

    if page > 1:
        nav_row.append(InlineKeyboardButton(text="‚óÄÔ∏è", callback_data=f"show_bids_{auction_id}_{page - 1}"))

    nav_row.append(InlineKeyboardButton(text=f"{page}/{total_pages}", callback_data="noop"))

    if page < total_pages:
        nav_row.append(InlineKeyboardButton(text="‚ñ∂Ô∏è", callback_data=f"show_bids_{auction_id}_{page + 1}"))

    if nav_row:
        builder.row(*nav_row)

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É –∞—É–∫—Ü–∏–æ–Ω–∞
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ª–æ—Ç—É", callback_data=f"show_auction_{auction_id}"))
    return builder.as_markup()