# scheduler.py
import logging
import os
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from aiogram import Bot
from aiogram.exceptions import TelegramAPIError

import db
from handlers import format_auction_post  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

CHANNEL_ID = os.getenv("CHANNEL_ID")


async def check_auctions(bot: Bot):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –∞—É–∫—Ü–∏–æ–Ω—ã, –≤—Ä–µ–º—è –∫–æ—Ç–æ—Ä—ã—Ö –∏—Å—Ç–µ–∫–ª–æ.
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É.
    """
    try:
        expired_auctions = await db.get_expired_active_auctions()
        if not expired_auctions:
            return  # –ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∞—É–∫—Ü–∏–æ–Ω–æ–≤, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º

        logging.info(f"–ù–∞–π–¥–µ–Ω–æ {len(expired_auctions)} –∞—É–∫—Ü–∏–æ–Ω–æ–≤ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.")

        for auction in expired_auctions:
            auction_id = auction['auction_id']
            last_bid = await db.get_last_bid(auction_id)

            winner_id = last_bid['user_id'] if last_bid else None
            final_price = last_bid['bid_amount'] if last_bid else None

            # 1. –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î
            await db.finish_auction(auction_id, winner_id, final_price)
            logging.info(f"–ê—É–∫—Ü–∏–æ–Ω #{auction_id} –∑–∞–≤–µ—Ä—à–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")

            # 2. –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª–µ
            finished_post_text = await format_auction_post(auction, bot, finished=True)
            try:
                await bot.edit_message_caption(
                    chat_id=CHANNEL_ID,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –∏–∑ –±–∞–∑—ã
                    message_id=auction['channel_message_id'],
                    caption=finished_post_text,
                    parse_mode="HTML"
                )
            except TelegramAPIError as e:
                logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ—Å—Ç –¥–ª—è –∞—É–∫—Ü–∏–æ–Ω–∞ #{auction_id} –≤ –∫–∞–Ω–∞–ª–µ: {e}")

            # 3. –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
            if winner_id:
                try:
                    await bot.send_message(
                        winner_id,
                        f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–±–µ–¥–∏–ª–∏ –≤ –∞—É–∫—Ü–∏–æ–Ω–µ ¬´{auction['title']}¬ª!\n\n"
                        f"–í–∞—à–∞ –≤—ã–∏–≥—Ä—ã—à–Ω–∞—è —Å—Ç–∞–≤–∫–∞: {final_price:,.2f} —Ä—É–±.\n\n"
                        f"–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π."
                    )
                except TelegramAPIError as e:
                    logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è {winner_id} –∞—É–∫—Ü–∏–æ–Ω–∞ #{auction_id}: {e}")

    except Exception as e:
        logging.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –∑–∞–¥–∞—á–µ check_auctions: {e}")


def setup_scheduler(bot: Bot, timezone: str):
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞."""
    scheduler = AsyncIOScheduler(timezone=timezone)
    scheduler.add_job(check_auctions, 'interval', minutes=1, args=(bot,))
    return scheduler
